/*! For license information please see attachEventProps.js.LICENSE.txt */
export function attachEventProps(e,t,s={}){const n=getClassName(e.classList,t,s);n&&(e.className=n),Object.keys(t).forEach((s=>{if("children"!==s&&"style"!==s&&"ref"!==s&&"className"!==s)if(0===s.indexOf("on")&&s[2]===s[2].toUpperCase()){const n=s.substring(2),a=n[0].toLowerCase()+n.substring(1);isCoveredByReact(a)||syncEvent(e,a,t[s])}else e[s]=t[s]}))}export function getClassName(e,t,s){const n=arrayToMap(e),a=arrayToMap(t.className?t.className.split(" "):[]),o=arrayToMap(s.className?s.className.split(" "):[]),r=[];return n.forEach((e=>{a.has(e)?(r.push(e),a.delete(e)):o.has(e)||r.push(e)})),a.forEach((e=>r.push(e))),r.join(" ")}export function isCoveredByReact(e,t=document){const s="on"+e;let n=s in t;if(!n){const e=t.createElement("div");e.setAttribute(s,"return;"),n="function"==typeof e[s]}return n}export function syncEvent(e,t,s){const n=e.__events||(e.__events={}),a=n[t];a&&e.removeEventListener(t,a),null!=s&&e.addEventListener(t,n[t]=function(e){s.call(this,e)})}function arrayToMap(e){const t=new Map;return e.forEach((e=>t.set(e,e))),t}