System.register(["jimu-core","jimu-arcgis","jimu-ui","esri/request","esri/geometry/Point","esri/layers/GraphicsLayer","esri/Graphic","esri/geometry/Polygon","esri/geometry/Extent","esri/geometry/Multipoint","esri/geometry/SpatialReference","esri/geometry/Polyline","esri/layers/Layer","esri/layers/WMTSLayer","esri/layers/VectorTileLayer","esri/layers/WMSLayer","esri/layers/KMLLayer","esri/rest/support/Query","esri/rest/query","esri/rest/support/ProjectParameters","esri/geometry/geometryEngine","esri/widgets/FeatureForm","esri/Camera","esri/core/promiseUtils","esri/geometry/Mesh","esri/rest/geometryService","esri/form/elements/FieldElement","esri/form/FormTemplate","esri/identity/IdentityManager","esri/geometry/projection"],(function(e,t){var i={},s={},r={},o={},a={},n={},l={},h={},p={},c={},d={},g={},m={},u={},y={},f={},w={},v={},I={},b={},V={},L={},x={},k={},P={},S={},M={},A={},C={},T={};return{setters:[function(e){i.React=e.React,i.ReactResizeDetector=e.ReactResizeDetector,i.classNames=e.classNames,i.css=e.css,i.jsx=e.jsx,i.utils=e.utils},function(e){s.JimuMapViewComponent=e.JimuMapViewComponent},function(e){r.Button=e.Button,r.Loading=e.Loading,r.LoadingType=e.LoadingType,r.WidgetPlaceholder=e.WidgetPlaceholder},function(e){o.default=e.default},function(e){a.default=e.default},function(e){n.default=e.default},function(e){l.default=e.default},function(e){h.default=e.default},function(e){p.default=e.default},function(e){c.default=e.default},function(e){d.default=e.default},function(e){g.default=e.default},function(e){m.default=e.default},function(e){u.default=e.default},function(e){y.default=e.default},function(e){f.default=e.default},function(e){w.default=e.default},function(e){v.default=e.default},function(e){I.default=e.default},function(e){b.default=e.default},function(e){V.default=e.default},function(e){L.default=e.default},function(e){x.default=e.default},function(e){k.default=e.default},function(e){P.default=e.default},function(e){S.default=e.default},function(e){M.default=e.default},function(e){A.default=e.default},function(e){C.default=e.default},function(e){T.default=e.default}],execute:function(){e((()=>{var e={13369:e=>{e.exports='<svg viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="m5.951 14.904-.22-.978a3.994 3.994 0 1 0-1.749-7.782l-.218-.97C4.167 5.064 4.582 5.006 5 5a4.997 4.997 0 0 1 .951 9.904Zm-3.479-1.8A4.006 4.006 0 0 1 1.388 8.28l-.31-1.383a4.987 4.987 0 0 0 1.7 7.567l-.306-1.36Zm.653-5.446c.047-.038.1-.066.15-.101l-.841-3.742A2.48 2.48 0 0 1 1.5 4c-.017 0-.033-.005-.05-.005l1 4.455c.177-.302.405-.57.674-.793l.001.001Zm.845-5.866a2.468 2.468 0 0 1-.314.95l13.91 4.009L5.55 17.676 4.487 12.95a2.984 2.984 0 0 1-.612-.168 2.98 2.98 0 0 1-.512-.276L4.95 19.57 19.564 6.286 3.97 1.792ZM3 1.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Zm-1 0a.5.5 0 1 0-1 0 .5.5 0 0 0 1 0Zm4.354 7.854-.707-.707L5 9.293l-.646-.646-.707.707.646.646-.646.646.707.707.646-.646.646.646.707-.707L5.707 10l.647-.646Z" fill="#000"></path></svg>'},13080:e=>{"use strict";e.exports=x},94129:e=>{"use strict";e.exports=l},57780:e=>{"use strict";e.exports=k},48702:e=>{"use strict";e.exports=A},70281:e=>{"use strict";e.exports=M},55606:e=>{"use strict";e.exports=p},21074:e=>{"use strict";e.exports=P},11438:e=>{"use strict";e.exports=c},8294:e=>{"use strict";e.exports=a},72019:e=>{"use strict";e.exports=h},24920:e=>{"use strict";e.exports=g},75443:e=>{"use strict";e.exports=d},24942:e=>{"use strict";e.exports=V},68900:e=>{"use strict";e.exports=T},43380:e=>{"use strict";e.exports=C},23852:e=>{"use strict";e.exports=n},86585:e=>{"use strict";e.exports=w},54195:e=>{"use strict";e.exports=m},7863:e=>{"use strict";e.exports=y},44262:e=>{"use strict";e.exports=f},54478:e=>{"use strict";e.exports=u},68831:e=>{"use strict";e.exports=o},98442:e=>{"use strict";e.exports=S},23853:e=>{"use strict";e.exports=I},19218:e=>{"use strict";e.exports=b},37902:e=>{"use strict";e.exports=v},27387:e=>{"use strict";e.exports=L},26826:e=>{"use strict";e.exports=s},48891:e=>{"use strict";e.exports=i},30726:e=>{"use strict";e.exports=r}},t={};function O(i){var s=t[i];if(void 0!==s)return s.exports;var r=t[i]={exports:{}};return e[i](r,r.exports,O),r.exports}O.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return O.d(t,{a:t}),t},O.d=(e,t)=>{for(var i in t)O.o(t,i)&&!O.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},O.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),O.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},O.p="";var F={};return O.p=window.jimuConfig.baseUrl,(()=>{"use strict";O.r(F),O.d(F,{default:()=>B});var e=O(48891),t=O(26826),i=O(30726);const s={_widgetLabel:"Oriented Imagery",toggleButtonOn:"Turn off to select features in map",toggleButtonOff:"Turn on to pick a focus point in map to view image",viewImage:"Click here to view the selected feature in image",updateButton:"Update",deleteButton:"Delete"};var r=O(68831),o=O(8294),a=O(23852),n=O(94129),l=O(72019),h=O(55606),p=O(11438),c=O(75443),d=O(24920),g=O(54195),m=O(54478),u=O(7863),y=O(44262),f=O(86585),w=O(37902),v=O(23853),I=O(19218),b=O(24942),V=O(27387),L=O(13080),x=O(57780),k=O(21074),P=O(98442),S=O(70281),M=O(48702),A=O(43380),C=O(68900),T=O(13369),E=O.n(T),D=function(e,t,i,s){return new(i||(i=Promise))((function(r,o){function a(e){try{l(s.next(e))}catch(e){o(e)}}function n(e){try{l(s.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(a,n)}l((s=s.apply(e,t||[])).next())}))};const z=e.utils.getGeometryService(),R=["diamond","x","circle","simple-line"];class B extends e.React.PureComponent{constructor(t){super(t),this.displayImageInViewFlag=!0,this.preserveToken={token:"",server:""},this.imagePointCheck=!1,this.currentCoverageCheck=!0,this.similarCoverageCheck=!1,this.allCoverageCheck=!1,this.coverageFlag={imagePoints:!1,similarCoverage:!1,currentCoverage:!0,allCoverage:!0},this.sceneViewFlag=!1,this.apiLocalState=!1,this.serviceUrl="",this.zoomToImageExtent=!1,this.nls=e=>this.props.intl?this.props.intl.formatMessage({id:e,defaultMessage:s[e]}):e,this.isConfigured=()=>this.props.useMapWidgetIds&&1===this.props.useMapWidgetIds.length,this.onActiveViewChange=e=>{var t,i,s,r,o,n,l,h,p,c;e&&(this.mapView=e.view,this.setState({mapLoaded:!0}),this.state.config||this.setState({config:{oic:[]}}),this.setupSymbols(),this.graphicsLayer?"2d"===this.mapView.type?(this.graphicsLayer.elevationInfo={mode:"on-the-ground",offset:0},null===(t=this.orientedViewer)||void 0===t||t.setEnvironment("2D")):(this.graphicsLayer.elevationInfo={mode:"absolute-height",offset:0},null===(i=this.orientedViewer)||void 0===i||i.setHeightModelInfo({heightModel:null===(s=this.mapView.heightModelInfo)||void 0===s?void 0:s.heightModel,heightUnit:null===(r=this.mapView.heightModelInfo)||void 0===r?void 0:r.heightUnit}),null===(o=this.orientedViewer)||void 0===o||o.setEnvironment("3D")):"2d"===this.mapView.type?(this.graphicsLayer=new a.default({title:this.nls("_widgetLabel"),elevationInfo:{mode:"on-the-ground",offset:0}}),null===(n=this.orientedViewer)||void 0===n||n.setEnvironment("2D")):(this.graphicsLayer=new a.default({title:this.nls("_widgetLabel"),elevationInfo:{mode:"absolute-height",offset:0}}),null===(l=this.orientedViewer)||void 0===l||l.setHeightModelInfo({heightModel:null===(h=this.mapView.heightModelInfo)||void 0===h?void 0:h.heightModel,heightUnit:null===(p=this.mapView.heightModelInfo)||void 0===p?void 0:p.heightUnit}),null===(c=this.orientedViewer)||void 0===c||c.setEnvironment("3D")),this.mapView.map.findLayerById(this.graphicsLayer.id)&&this.mapView.map.remove(this.graphicsLayer),this.mapView.map.add(this.graphicsLayer),this.mapView&&(this.mapView.cursor=this.props.pointBool?"crosshair":"default "),this.mapClickEventHandler=this.mapView.on("click",this.mapClickEvent.bind(this)),this.mapPopupHandler1=this.mapView.popup.watch("selectedFeature",this.graphicSelected.bind(this)),this.mapPopupHandler2=this.mapView.popup.watch("visible",(e=>{!e&&this.featureSelected&&(this.orientedViewer.deselectFeaturesInImage(this.featureSelected),document.getElementById("viewGraphicBtn")&&(document.getElementById("viewGraphicBtn").style.display="none"))})),this.overviewLayer&&(this.mapView.map.findLayerById(this.overviewLayer.id)||(this.mapView.map.add(this.overviewLayer),this.overviewLayer.visible=this.coverageFlag.allCoverage)))},this.loadOIC=()=>{const e=this.props.config.oicList.length>0?this.props.config.oicList[0].url:"";if(e&&(this.oicList=[],this.oicList.push(e)),window.location.href.includes("oic=")){let e=window.location.href.split("oic=")[1];e=e.split("&")[0];const t=e.split("/home/item.html?id=")[0],i=e.split("/home/item.html?id=")[1];e&&t&&i&&(this.oicList[0]=t+"/sharing/rest/content/items/"+i)}this.addOICItem(this.oicList[0])},this.layerModuleSelector=e=>{g.default.fromArcGISServerUrl({url:e,properties:{visible:!1}}).then((e=>{e.load().then((t=>{this.overviewLayer&&(this.mapView.map.remove(this.overviewLayer),this.overviewLayer=null),this.overviewLayer=e,this.overviewLayer.minScale=Math.max(5e4,300*Number(this.state.config.oic[this.state.selectedOIC].itemUrl.properties.MaxDistance)),this.mapView.map.add(this.overviewLayer),this.overviewLayer.fullExtent.spatialReference.wkid!==this.mapView.spatialReference.wkid||b.default.intersects(this.mapView.extent,this.overviewLayer.fullExtent)&&!b.default.within(this.overviewLayer.fullExtent,this.mapView.extent)||this.mapView.goTo(this.overviewLayer.fullExtent),this.createCoverageArea(this.coverageFlag.allCoverage)}))})).catch((()=>{this.overviewLayer&&(this.mapView.map.remove(this.overviewLayer),this.overviewLayer=null),-1!==e.toLowerCase().indexOf(".wmts")?this.overviewLayer=new m.default({url:e,visible:!1,minScale:Math.max(5e4,300*Number(this.state.config.oic[this.state.selectedOIC].itemUrl.properties.MaxDistance))}):-1!==e.toLowerCase().indexOf(".wms")?this.overviewLayer=new y.default({url:e,visible:!1,minScale:Math.max(5e4,300*Number(this.state.config.oic[this.state.selectedOIC].itemUrl.properties.MaxDistance))}):-1!==e.toLowerCase().indexOf(".kml")&&(this.overviewLayer=new f.default({url:e,visible:!1,minScale:Math.max(5e4,300*Number(this.state.config.oic[this.state.selectedOIC].itemUrl.properties.MaxDistance))})),this.overviewLayer&&(this.mapView.map.add(this.overviewLayer),this.overviewLayer.fullExtent.spatialReference.wkid!==this.mapView.spatialReference.wkid||b.default.intersects(this.mapView.extent,this.overviewLayer.fullExtent)&&!b.default.within(this.overviewLayer.fullExtent,this.mapView.extent)||this.mapView.goTo(this.overviewLayer.fullExtent),this.createCoverageArea(this.coverageFlag.allCoverage))}))},this.loadOrientedImageryApi=()=>{this.props.oiApiLoaded?this.loadOIViewer():window.orientedImagery.on("load",(e=>{e?(this.props.dispatch({type:"API_Loaded",val:!0}),this.loadOIViewer()):this.props.dispatch({type:"API_Loaded",val:!1})}))},this.loadOIViewer=()=>{var e,t,i,s,r,a;this.setState({showLoading:!1}),this.apiLocalState=!0,this.orientedViewer&&(this.removeVectorLayers(),this.orientedViewer.destroyViewer(),this.orientedViewer=null),null===(t=null===(e=this.selectBtnRef)||void 0===e?void 0:e.current)||void 0===t||t.classList.remove("hide"),null===(s=null===(i=this.selectBtnRef)||void 0===i?void 0:i.current)||void 0===s||s.classList.add("show"),this.orientedViewer=window.orientedImagery.viewer(this.oiviewerRef.current),this.props.theme.darkTheme&&window.orientedImagery.setTheme("dark"),"3d"===this.mapView.type&&(this.orientedViewer.setHeightModelInfo({heightModel:null===(r=this.mapView.heightModelInfo)||void 0===r?void 0:r.heightModel,heightUnit:null===(a=this.mapView.heightModelInfo)||void 0===a?void 0:a.heightUnit}),this.orientedViewer.setEnvironment("3D")),this.orientedViewer.showCoverageTools(!0),this.orientedViewer.toggleTool({name:"CurrentCoverage",state:!0}),this.orientedViewer.toggleTool({name:"AllCoverage",state:!0}),this.orientedViewer.on("imagePointsCheckbox",(e=>{this.coverageFlag.imagePoints=e,this.turningOnOffFeatures("imagePoints",e)})),this.orientedViewer.on("currentCoverageCheckbox",(e=>{this.coverageFlag.currentCoverage=e,this.turningOnOffFeatures("currentCoverage",e)})),this.orientedViewer.on("similarCoverageCheckbox",(e=>{this.coverageFlag.similarCoverage=e,this.turningOnOffFeatures("similarCoverage",e)})),this.orientedViewer.on("coverageMapCheckbox",(e=>{this.coverageFlag.allCoverage=e,this.createCoverageArea(e)})),this.orientedViewer.on("sceneView",(e=>{this.sceneViewFlag=e,this.setViewMode(e)})),this.orientedViewer.on("searchImages",this.drawPointAndPolygons),this.orientedViewer.on("showImage",this.drawPointAndPolygons),this.orientedViewer.on("updateImage",this.updateCoveragePolygon),this.orientedViewer.on("changeImage",this.updateGraphics),this.orientedViewer.on("imageToGroundPoint",(e=>{this.showPointOnMap(new o.default(e))})),this.orientedViewer.on("addFeature",this.addFeature),this.orientedViewer.on("deleteFeature",this.deleteFeature),this.orientedViewer.on("selectFeature",this.selectFeature),this.orientedViewer.on("toggleDistanceTool",(e=>{this.distanceSelector=e})),this.orientedViewer.on("addImageInView",this.addImageInView),this.orientedViewer.on("updateImageInView",this.updateImageInView),this.orientedViewer.on("toggleImageInView",this.toggleImageInView),this.orientedViewer.on("updateViewCamera",this.updateViewCamera),this.orientedViewer.on("deleteImageInView",this.deleteImageInView),this.orientedViewer&&this.props.config.editingEnabled&&this.mapView?this.addAllVectorLayers():this.orientedViewer&&!this.props.config.editingEnabled&&this.mapView&&this.removeVectorLayers()},this.destroyOIViewer=()=>{this.orientedViewer&&(this.orientedViewer.destroyViewer(),this.orientedViewer=null),this.apiLocalState=!1,this.mapView=null},this.addOICItem=e=>{(0,r.default)(e+"/data",{query:{f:"json"},responseType:"json"}).then((e=>D(this,void 0,void 0,(function*(){var t,i,s,a,n,l,c,d,g,m,y,f,V;const L=e.url.substring(0,e.url.indexOf("/data"));if(e=e.data,this.state.config.oic=[],e&&e.properties&&(this.state.config.oic[L]={title:e.properties.Name,serviceUrl:e.properties.ServiceURL,overviewUrl:e.properties.OverviewURL,itemUrl:e},this.setState({OICname:e.properties.Name}),this.setState({selectedOIC:this.oicList[0]}),this.oicList[0])){let e=this.state.config.oic[this.oicList[0]].serviceUrl;if(e.includes("item.html?")){const t=e.split("/home")[0]+"/sharing/rest/content/items/"+e.split("id=")[1].split("&sublayer=")[0].split("/")[0],i=e.split("&sublayer=")[1]&&e.split("&sublayer=")[1].split("/")[0];yield(0,r.default)(t,{query:{f:"json"},responseType:"json"}).then((t=>D(this,void 0,void 0,(function*(){e=t.data.url,i?(e=e+"/"+i,this.serviceUrl=e):yield(0,r.default)(e,{query:{f:"json"},responseType:"json"}).then((t=>{e=e+"/"+t.data.layers[0].id,this.serviceUrl=e}))}))))}if((null===(a=null===(s=null===(i=null===(t=this.config)||void 0===t?void 0:t.oic[0])||void 0===i?void 0:i.itemUrl)||void 0===s?void 0:s.properties)||void 0===a?void 0:a.DefaultSearchLocation)&&(null===(n=this.config.oic[0].itemUrl.properties.DefaultSearchLocation)||void 0===n?void 0:n.x)){const e=new o.default(this.config.oic[0].itemUrl.properties.DefaultSearchLocation),t=new I.default;t.geometries=[e],t.outSpatialReference=this.mapView.extent?this.mapView.extent.spatialReference:this.mapView.spatialReference,this.geometryService.project(z,t).then((e=>{this.mapView.goTo(e[0]),this.selectedPoint=e[0],this.setState({defaultImage:this.config.oic[0].itemUrl.properties.DefaultImage,defaultPoint:e[0]})}))}else if(null===(g=null===(d=null===(c=null===(l=this.config)||void 0===l?void 0:l.oic[0])||void 0===c?void 0:c.itemUrl)||void 0===d?void 0:d.properties)||void 0===g?void 0:g.DefaultImage)this.zoomToImageExtent=!0,this.setState({defaultImage:this.config.oic[0].itemUrl.properties.DefaultImage,defaultPoint:null});else if("GeoJSONFeatures"===e){const e=null===(V=null===(f=null===(y=null===(m=this.config)||void 0===m?void 0:m.oic[0])||void 0===y?void 0:y.itemUrl)||void 0===f?void 0:f.properties)||void 0===V?void 0:V.GeoJSONFeatures;if(e&&"FeatureCollection"===e.type&&Object.hasOwnProperty.call(e,"features")&&e.features.length){let t=new p.default({spatialReference:{wkid:4326}});for(let i=0;i<e.features.length;i++)t.addPoint(e.features[i].geometry.coordinates);t=C.default.project(t,this.mapView.extent?this.mapView.extent.spatialReference:this.mapView.spatialReference),b.default.intersects(this.mapView.extent,t.extent)&&!b.default.within(t.extent,this.mapView.extent)||this.mapView.goTo(t.extent)}}else if(-1!==e.indexOf("FeatureServer")){const t=new w.default;t.where="1=1",t.returnGeometry=!1,t.outSpatialReference=this.mapView.extent.spatialReference,v.default.executeForExtent(e,t).then((e=>{e.extent&&(this.graphicsLayer.fullExtent=e.extent,b.default.intersects(this.mapView.extent,e.extent)&&!b.default.within(e.extent,this.mapView.extent)||this.mapView.goTo(e.extent))}))}else-1!==e.indexOf("ImageServer")&&(0,r.default)(e,{query:{f:"json"},responseType:"json"}).then((e=>{if(e.data&&e.data.extent)if(e.data.extent.spatialReference.wkid!==this.mapView.spatialReference.wkid||b.default.intersects(this.mapView.extent,new h.default(e.data.extent))&&!b.default.within(new h.default(e.data.extent),this.mapView.extent)){const t=new I.default;t.geometries=[new h.default(e.data.extent)],t.outSpatialReference=this.mapView.spatialReference,P.default.project(this.props.portalSelf.helperServices.geometry.url,t).then((e=>{this.graphicsLayer.fullExtent=e[0],b.default.intersects(this.mapView.extent,e[0])&&!b.default.within(e[0],this.mapView.extent)||this.mapView.goTo(e[0])}))}else this.mapView.goTo(new h.default(e.data.extent)),this.graphicsLayer.fullExtent=new h.default(e.data.extent)}));if(this.state.config.oic[this.oicList[0]].overviewUrl){let e=this.state.config.oic[this.oicList[0]].overviewUrl;e="string"!=typeof e?JSON.stringify(e):e;try{e=JSON.parse(e),"object"==typeof e&&e?(e.visible=!1,this.overviewLayer=new u.default(e),this.mapView.map.add(this.overviewLayer),this.createCoverageArea(this.coverageFlag.allCoverage)):this.layerModuleSelector(this.state.config.oic[this.oicList[0]].overviewUrl)}catch(e){this.layerModuleSelector(this.state.config.oic[this.oicList[0]].overviewUrl)}}else-1===this.state.config.oic[this.oicList[0]].serviceUrl.indexOf("ImageServer")?this.state.config.oic[this.oicList[0]].serviceUrl.includes("item.html?")?this.layerModuleSelector(e):this.layerModuleSelector(this.state.config.oic[this.oicList[0]].serviceUrl):this.createCoverageArea(this.coverageFlag.allCoverage)}}))))},this.setupSymbols=()=>{this.activeSourcePointSymbol={type:"simple-marker",size:15,style:"circle",color:[255,102,102,.5],outline:null},this.sourcePointSymbol={type:"simple-marker",size:10,style:"circle",color:[0,128,192,.5],outline:null},this.polygonSymbol={type:"simple-fill",style:"solid",outline:null,color:[0,128,192,.5]},this.activePolygonSymbol={type:"simple-fill",style:"solid",outline:null,color:[255,102,102,.5]},this.greenLineSymbol={type:"simple-line",width:1,style:"short-dash",color:[0,255,0]},this.diamondSymbol={type:"simple-marker",size:10,style:"diamond",color:[0,255,0],outline:null},this.crossSymbol={type:"simple-marker",size:8,style:"x",color:[255,0,0],outline:{color:[255,0,0],width:2,style:"solid"}},this.coverageMapSymbol={type:"simple-fill",style:"solid",outline:null,color:[0,200,0,.5]},this.activeFrustumSymbol={type:"mesh-3d",symbolLayers:[{type:"fill",material:{color:[255,102,102,.5]},edges:{type:"solid",color:[255,102,102,0]}}]},this.frustumSymbol={type:"mesh-3d",symbolLayers:[{type:"fill",material:{color:[0,128,192,.5]},edges:{type:"solid",color:[0,128,192,0]}}]}},this.mapClickEvent=e=>{if("2d"===this.mapView.type)if(this.distanceSelector&&this.currentImagePoint){const t=e.mapPoint.distance(this.currentImagePoint);let i;i=102100===e.mapPoint.spatialReference.wkid||3857===e.mapPoint.spatialReference.wkid?1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*e.mapPoint.y/6378137))):1,this.orientedViewer.setDistance(t/i)}else e.native.altKey?(this.showPointOnMap(e.mapPoint),this.groundToImage(e.mapPoint)):this.props.pointBool&&(this.graphicExists=!1,this.mapView.hitTest(e.screenPoint).then((t=>{if(t.results.length>0)if(t.results[0].graphic.attributes&&!t.results[0].graphic.attributes.id&&t.results[0].graphic.attributes.imageID)this.selectedExposurePoint={geometry:t.results[0].graphic.geometry,id:t.results[0].graphic.attributes.imageID},this.searchImages(this.selectedPoint,parseInt(this.selectedExposurePoint.id));else if(t.results[0].graphic.attributes&&t.results[0].graphic.attributes.OBJECTID&&t.results[0].graphic.layer.url.includes("FeatureServer")){const i=t.results[0].graphic.layer.url+"/"+t.results[0].graphic.layer.layerId;i===this.state.config.oic[this.state.selectedOIC].serviceUrl||i===this.serviceUrl?this.showImage(e.mapPoint,t.results[0].graphic.attributes.OBJECTID):(this.selectedPoint=e.mapPoint,this.searchImages(e.mapPoint,null))}else this.selectedPoint=e.mapPoint,this.searchImages(e.mapPoint,null);else this.selectedPoint=e.mapPoint,this.searchImages(e.mapPoint,null)})));else this.sceneViewFlag?this.props.pointBool&&!this.imageInViewFlag&&(this.hidePopup=!0,this.searchImages(e.mapPoint,null)):this.mapView.hitTest(e.screenPoint).then((t=>{let i,s;if(i=t.results.length>0?t.results[0].mapPoint:e.mapPoint,this.distanceSelector&&this.currentImageCameraLocation){s=102100===i.spatialReference.wkid||3857===i.spatialReference.wkid?1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*i.y/6378137))):1;const e=this.currentImageCameraLocation.z-i.z,t=Math.sqrt(Math.pow(this.currentImageCameraLocation.x-i.x,2)+Math.pow(this.currentImageCameraLocation.y-i.y,2))/s,r=Math.sqrt(Math.pow(t,2)+Math.pow(e,2));this.orientedViewer.setDistance(r)}else e.native.altKey?(this.hidePopup=!0,this.groundToImage(i)):this.props.pointBool&&(this.hidePopup=!0,this.graphicExists=!1,this.searchImages(i,null))}))},this.searchImages=(e,t)=>{var i,s;const r=null===(i=this.state.config.oic[this.state.selectedOIC])||void 0===i?void 0:i.itemUrl;this.setState({showLoading:!0}),this.props.oiApiLoaded&&r&&("2d"===this.mapView.type?(e.z=0,this.orientedViewer.searchImages(e.toJSON(),r,{maxDistance:null!==(s=Number(this.state.config.oic[this.state.selectedOIC].itemUrl.properties.MaxDistance))&&void 0!==s?s:1e3,extent:this.mapView.extent.toJSON(),objectId:t||null,token:{token:this.preserveToken&&this.preserveToken.token?this.preserveToken.token:null,server:this.preserveToken&&this.preserveToken.server?this.preserveToken.server+"/sharing/rest":null}})):this.queryElevation(e).then((i=>{var s,o;const a=e.toJSON();if(a.elevation=i.geometry.z,this.avgGroundElevation=i.geometry.z,this.sceneViewFlag){this.graphicsLayer.graphics.removeAll(),this.graphicsLayer.add(new n.default({geometry:e,symbol:this.crossSymbol,attributes:{id:"oi-focusPoint"}}));const i=this.mapView.camera.position.clone();this.orientedViewer.searchImages(a,r,{maxDistance:null!==(s=Number(this.state.config.oic[this.state.selectedOIC].itemUrl.properties.MaxDistance))&&void 0!==s?s:1e3,extent:this.mapView.extent.toJSON(),mapSize:{w:this.mapView.width,h:this.mapView.height},camera:{heading:this.mapView.camera.heading,tilt:this.mapView.camera.tilt,fov:this.mapView.camera.fov,elevation:0,position:i},token:{token:this.preserveToken&&this.preserveToken.token?this.preserveToken.token:null,server:this.preserveToken&&this.preserveToken.server?this.preserveToken.server+"/sharing/rest":null},objectId:t||null})}else this.orientedViewer.searchImages(a,r,{maxDistance:null!==(o=Number(this.state.config.oic[this.state.selectedOIC].itemUrl.properties.MaxDistance))&&void 0!==o?o:1e3,camera:this.mapView.camera,mapSize:{w:this.mapView.width,h:this.mapView.height},extent:this.mapView.extent.toJSON(),objectId:t||null,token:{token:this.preserveToken&&this.preserveToken.token?this.preserveToken.token:null,server:this.preserveToken&&this.preserveToken.server?this.preserveToken.server+"/sharing/rest":null}})})))},this.showImage=(e,t)=>{var i,s;const r=null===(i=this.state.config.oic[this.state.selectedOIC])||void 0===i?void 0:i.itemUrl;this.props.oiApiLoaded&&r&&("2d"===this.mapView.type?(e.z=0,this.orientedViewer.showImage(e.toJSON(),r,{maxDistance:null!==(s=Number(this.state.config.oic[this.state.selectedOIC].itemUrl.properties.MaxDistance))&&void 0!==s?s:1e3,extent:this.mapView.extent.toJSON(),objectId:t||null,token:{token:this.preserveToken&&this.preserveToken.token?this.preserveToken.token:null,server:this.preserveToken&&this.preserveToken.server?this.preserveToken.server+"/sharing/rest":null}})):this.queryElevation(e).then((i=>{var s,o;const a=e.toJSON();if(a.elevation=i.geometry.z,this.avgGroundElevation=i.geometry.z,this.sceneViewFlag){this.graphicsLayer.graphics.removeAll(),this.graphicsLayer.add(new n.default({geometry:e,symbol:this.crossSymbol,attributes:{id:"oi-focusPoint"}}));const i=this.mapView.camera.position.clone();this.orientedViewer.showImage(a,r,{maxDistance:null!==(s=Number(this.state.config.oic[this.state.selectedOIC].itemUrl.properties.MaxDistance))&&void 0!==s?s:1e3,extent:this.mapView.extent.toJSON(),mapSize:{w:this.mapView.width,h:this.mapView.height},camera:{heading:this.mapView.camera.heading,tilt:this.mapView.camera.tilt,fov:this.mapView.camera.fov,elevation:0,position:i},objectId:t||null,token:{token:this.preserveToken&&this.preserveToken.token?this.preserveToken.token:null,server:this.preserveToken&&this.preserveToken.server?this.preserveToken.server+"/sharing/rest":null}})}else this.orientedViewer.showImage(a,r,{maxDistance:null!==(o=Number(this.state.config.oic[this.state.selectedOIC].itemUrl.properties.MaxDistance))&&void 0!==o?o:1e3,camera:this.mapView.camera,mapSize:{w:this.mapView.width,h:this.mapView.height},extent:this.mapView.extent.toJSON(),objectId:t||null,token:{token:this.preserveToken&&this.preserveToken.token?this.preserveToken.token:null,server:this.preserveToken&&this.preserveToken.server?this.preserveToken.server+"/sharing/rest":null}})})))},this.drawPointAndPolygons=e=>D(this,void 0,void 0,(function*(){if(this.setState({showLoading:!1}),this.graphicsLayer.graphics.removeAll(),!e.error)if(this.graphicExists=!1,"2d"===this.mapView.type)e.point.z=0,this.pointAndPolygonGraphics={points:e.imageSourcePoints,polygons:e.coveragePolygons},this.graphicsLayer.addMany(this.drawCoveragePolygons(e.coveragePolygons,e.imageAttributes.imageID)),this.graphicsLayer.addMany(this.drawImageSourcePoints(e.imageSourcePoints,e.imageAttributes.imageID)),this.zoomToImageExtent?(this.zoomToImageExtent=!1,this.mapView.goTo(new o.default(e.imageSourcePoints[0]))):this.graphicsLayer.add(new n.default({geometry:new o.default(e.point),symbol:this.crossSymbol})),this.imageProperties=e.imageAttributes,this.activeImageID=e.imageAttributes.imageID,this.currentImagePoint=new o.default({x:this.imageProperties.location.x,y:this.imageProperties.location.y,spatialReference:new c.default(this.imageProperties.location.spatialReference)});else{this.zoomToImageExtent&&(yield this.queryElevation(new o.default(e.imageSourcePoints[0])).then((e=>{this.avgGroundElevation=e.geometry.z})));let t=this.createMultiPoint({geometries:e.imageSourcePoints.concat(e.point),type:"point"});const i=this.createMultiPoint({geometries:e.coverageFrustums,type:"frustum"});t=t.concat(i),t=new p.default({points:t,spatialReference:this.mapView.spatialReference});for(let i=0;i<t.points.length;i++)if(i<e.imageSourcePoints.length)e.imageSourcePoints[i].z+=this.avgGroundElevation||0;else for(let t=0;t<e.coverageFrustums.length;t++)if(e.coverageFrustums[t])for(let s=2;s<e.coverageFrustums[t].vertexAttributes.position.length;s+=3)e.coverageFrustums[t].vertexAttributes.position[s]+=this.avgGroundElevation||0,i++;this.pointAndFrustumGraphics={points:e.imageSourcePoints,frustums:e.coverageFrustums},this.graphicsLayer.addMany(this.drawFrustums(e.coverageFrustums,e.imageAttributes.imageID)),this.graphicsLayer.addMany(this.drawImageSourcePoints(e.imageSourcePoints,e.imageAttributes.imageID)),this.zoomToImageExtent?this.zoomToImageExtent=!1:this.graphicsLayer.add(new n.default({geometry:new o.default(e.point),symbol:this.crossSymbol})),e.point.spatialReference.isWebMercator?this.WMSF=1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*e.point.y/6378137))):this.WMSF=1,this.imageProperties=e.imageAttributes,this.selectedAsset=e.point,this.setCameraView(this.imageProperties),this.activeImageID=e.imageAttributes.imageID}})),this.drawCoveragePolygons=(e,t)=>{const i=[];let s;for(let r=0;r<e.length;r++)e[r]&&(t===e[r].imageID?s=new n.default({geometry:new l.default(e[r]),symbol:this.activePolygonSymbol,visible:this.coverageFlag.currentCoverage,attributes:{imageID:e[r].imageID,id:"oi-polygons"}}):i.push(new n.default({geometry:new l.default(e[r]),symbol:this.polygonSymbol,visible:this.coverageFlag.similarCoverage,attributes:{imageID:e[r].imageID,id:"oi-polygons"}})));return s&&i.push(s),i},this.drawImageSourcePoints=(e,t)=>{const i=[];let s;for(let r=0;r<e.length;r++)t===e[r].imageID?s=new n.default({geometry:new o.default(e[r]),symbol:this.activeSourcePointSymbol,visible:this.coverageFlag.imagePoints,attributes:{imageID:e[r].imageID}}):i.push(new n.default({geometry:new o.default(e[r]),symbol:this.sourcePointSymbol,visible:this.coverageFlag.imagePoints,attributes:{imageID:e[r].imageID}}));return s&&i.push(s),i},this.updateCoveragePolygon=e=>{if(this.setState({showLoading:!1}),"2d"===this.mapView.type){if(e.coveragePolygon)for(let t=this.graphicsLayer.graphics.length-1;t>=0;t--)this.graphicsLayer.graphics.getItemAt(t).attributes&&"oi-polygons"===this.graphicsLayer.graphics.getItemAt(t).attributes.id&&this.graphicsLayer.graphics.getItemAt(t).attributes.imageID===e.imageID&&(this.graphicsLayer.graphics.getItemAt(t).geometry=new l.default(e.coveragePolygon))}else if(e.coverageFrustum.vertexAttributes){for(let t=2;t<e.coverageFrustum.vertexAttributes.position.length;t+=3)e.coverageFrustum.vertexAttributes.position[t]+=this.avgGroundElevation||0;for(let t=this.graphicsLayer.graphics.length-1;t>=0;t--)if(this.graphicsLayer.graphics.getItemAt(t).attributes&&"oi-polygons"===this.graphicsLayer.graphics.getItemAt(t).attributes.id&&this.graphicsLayer.graphics.getItemAt(t).attributes.imageID===e.imageID){this.graphicsLayer.graphics.getItemAt(t).geometry=k.default.fromJSON(e.coverageFrustum);break}}},this.updateGraphics=e=>{if(this.imageProperties=e,"3d"===this.mapView.type){setTimeout((()=>{this.setCameraView(this.imageProperties)}),2e3);let t=0;const i={};if(this.graphicsLayer.graphics.every((s=>t<4&&(R.includes(s.symbol.style)&&("circle"===s.symbol.style?s.attributes.imageID===e.imageID&&(i[s.symbol.style]=s.clone()):i[s.symbol.style]=s.clone()),t+=1,!0))),this.graphicsLayer.graphics.removeAll(),this.graphicsLayer.addMany(this.drawFrustums(this.pointAndFrustumGraphics.frustums,e.imageID)),this.graphicsLayer.addMany(this.drawImageSourcePoints(this.pointAndFrustumGraphics.points,e.imageID)),i.x&&this.graphicsLayer.add(i.x),i.diamond&&this.graphicsLayer.add(i.diamond),i["simple-line"]){const e=i.circle;i["simple-line"].geometry.paths[0][1]=[e.x,e.y,e.z],this.graphicsLayer.add(i["simple-line"])}}else{let t,i;this.currentImagePoint=new o.default({x:this.imageProperties.location.x,y:this.imageProperties.location.y,spatialReference:new c.default(this.imageProperties.location.spatialReference)});for(let e=this.graphicsLayer.graphics.length-1;e>=0;e--)if("diamond"===this.graphicsLayer.graphics.getItemAt(e).symbol.style){t=this.graphicsLayer.graphics.getItemAt(e).clone();break}for(let e=this.graphicsLayer.graphics.length-1;e>=0;e--)if("x"===this.graphicsLayer.graphics.getItemAt(e).symbol.style){i=this.graphicsLayer.graphics.getItemAt(e).clone();break}this.graphicsLayer.graphics.removeAll(),this.graphicsLayer.addMany(this.drawCoveragePolygons(this.pointAndPolygonGraphics.polygons,e.imageID)),this.graphicsLayer.addMany(this.drawImageSourcePoints(this.pointAndPolygonGraphics.points,e.imageID)),i&&this.graphicsLayer.add(i),t&&this.graphicsLayer.add(t)}this.activeImageID=e.imageID},this.createCoverageArea=e=>{if(this.overviewLayer&&(this.overviewLayer.visible=!!e),!this.state.config.oic[this.state.selectedOIC].itemUrl.properties.OverviewURL){for(let e=0;e<=this.graphicsLayer.graphics.length-1;e++)if(this.graphicsLayer.graphics.getItemAt(e).symbol&&"solid"===this.graphicsLayer.graphics.getItemAt(e).symbol.style&&this.graphicsLayer.graphics.getItemAt(e).attributes.coverageMap){this.graphicsLayer.remove(this.graphicsLayer.graphics.getItemAt(e));break}e&&this.props.oiApiLoaded&&this.orientedViewer.getCoverageMap(this.mapView.extent.toJSON(),this.state.config.oic[this.state.selectedOIC].itemUrl).then((e=>{if(e.coverageMap){for(let e=0;e<=this.graphicsLayer.graphics.length-1;e++)if(this.graphicsLayer.graphics.getItemAt(e).symbol&&"solid"===this.graphicsLayer.graphics.getItemAt(e).symbol.style&&this.graphicsLayer.graphics.getItemAt(e).attributes.coverageMap){this.graphicsLayer.remove(this.graphicsLayer.graphics.getItemAt(e));break}if("2d"===this.mapView.type){const t=new n.default({geometry:new l.default(e.coverageMap),symbol:this.coverageMapSymbol,attributes:{coverageMap:!0}});this.graphicsLayer.add(t)}else{const t=new p.default({spatialReference:this.mapView.spatialReference,points:this.createMultiPoint({type:"polygon",geometries:[e.coverageMap]})});this.queryElevation(t).then((t=>{let i=0;for(let s=0;s<e.coverageMap.rings.length;s++){for(let r=0;r<e.coverageMap.rings[s].length;r++)e.coverageMap.rings[s][r][2]=t.geometry.points[i][2];i++}const s=new n.default({geometry:new l.default(e.coverageMap),symbol:this.coverageMapSymbol,attributes:{coverageMap:!0}});this.graphicsLayer.add(s),this.graphicsLayer.graphics.reorder(s,0)}))}}}))}},this.drawFrustums=(e,t)=>{const i=[];let s;for(let r=0;r<e.length;r++)e[r]&&(t===e[r].imageID?s=new n.default({geometry:k.default.fromJSON(e[r]),symbol:this.activeFrustumSymbol,visible:this.coverageFlag.currentCoverage,attributes:{imageID:e[r].imageID,id:"oi-polygons"}}):i.push(new n.default({geometry:k.default.fromJSON(e[r]),symbol:this.frustumSymbol,visible:this.coverageFlag.similarCoverage,attributes:{imageID:e[r].imageID,id:"oi-polygons"}})));return s&&i.push(s),i},this.showPointOnMap=e=>{var t,i,s;if("2d"===this.mapView.type)if(e.z=0,this.graphicExists){for(let t=this.graphicsLayer.graphics.length-1;t>=0;t--)if("diamond"===this.graphicsLayer.graphics.getItemAt(t).symbol.style){this.graphicsLayer.graphics.getItemAt(t).geometry=e;break}}else this.graphicsLayer.add(new n.default({geometry:e,symbol:this.diamondSymbol})),this.graphicExists=!0;else if(e.z||(e.z=0),this.graphicExists){for(let t=this.graphicsLayer.graphics.length-1;t>=0;t--)if("diamond"===(null===(i=this.graphicsLayer.graphics.getItemAt(t).symbol)||void 0===i?void 0:i.style)){this.graphicsLayer.graphics.getItemAt(t).geometry=e;break}for(let t=this.graphicsLayer.graphics.length-1;t>=0;t--)if("simple-line"===(null===(s=this.graphicsLayer.graphics.getItemAt(t).symbol)||void 0===s?void 0:s.type)){const i=this.graphicsLayer.graphics.getItemAt(t).clone();i.geometry.paths[0][0]=[e.x,e.y,e.z],this.graphicsLayer.graphics.getItemAt(t).geometry=i.geometry;break}}else{this.graphicsLayer.add(new n.default({geometry:e,symbol:this.diamondSymbol}));for(let i=this.graphicsLayer.graphics.length-1;i>=0;i--)if("circle"===(null===(t=this.graphicsLayer.graphics.getItemAt(i).symbol)||void 0===t?void 0:t.style)&&this.graphicsLayer.graphics.getItemAt(i).attributes.imageID===this.activeImageID){const t=this.graphicsLayer.graphics.getItemAt(i).geometry.clone();this.graphicsLayer.add(new n.default({geometry:new d.default({paths:[[e.x,e.y,e.z],[t.x,t.y,t.z]],spatialReference:e.spatialReference.toJSON()}),symbol:this.greenLineSymbol}));break}this.graphicExists=!0}},this.groundToImage=e=>{if(this.props.oiApiLoaded)if("2d"===this.mapView.type)e.z=0,this.orientedViewer.displayGroundPointInImage(e.toJSON());else{const t=e.toJSON();this.showPointOnMap(e),this.orientedViewer.displayGroundPointInImage(t)}},this.toggleIcon=e=>{e.currentTarget.classList.contains("oi-widget-selectBtnSelected")?(this.mapView.cursor="default",this.props.dispatch({type:"Click_Btn_Active",val:!1})):(this.mapView.cursor="crosshair",this.props.dispatch({type:"Click_Btn_Active",val:!0}))},this.turningOnOffFeatures=(e,t)=>{switch(e){case"imagePoints":for(let e=this.graphicsLayer.graphics.length-1;e>=0;e--)"circle"===this.graphicsLayer.graphics.getItemAt(e).symbol.style&&(this.graphicsLayer.graphics.getItemAt(e).visible=t);break;case"currentCoverage":for(let e=this.graphicsLayer.graphics.length-1;e>=0;e--)this.graphicsLayer.graphics.getItemAt(e).attributes&&"oi-polygons"===this.graphicsLayer.graphics.getItemAt(e).attributes.id&&this.graphicsLayer.graphics.getItemAt(e).attributes.imageID===this.activeImageID&&(this.graphicsLayer.graphics.getItemAt(e).visible=t);break;case"similarCoverage":for(let e=this.graphicsLayer.graphics.length-1;e>=0;e--)this.graphicsLayer.graphics.getItemAt(e).attributes&&"oi-polygons"===this.graphicsLayer.graphics.getItemAt(e).attributes.id&&this.graphicsLayer.graphics.getItemAt(e).attributes.imageID!==this.activeImageID&&(this.graphicsLayer.graphics.getItemAt(e).visible=t)}},this.addAllVectorLayers=()=>{const e=this.mapView.map.layers.items;this.vectorLayers=[];for(let t=0;t<this.props.config.vectorLayers.length;t++)for(let i=0;i<e.length;i++)e[i].id===this.props.config.vectorLayers[t].featureLayer.id&&this.props.config.vectorLayers[t].addToViewer&&this.vectorLayers.push({id:e[i].id,title:e[i].title,url:e[i].url+"/"+e[i].layerId,editable:this.props.config.vectorLayers[t].editing&&e[i].editingEnabled&&e[i].capabilities&&e[i].capabilities.operations.supportsEditing,renderer:e[i].renderer,geometryType:e[i].geometryType,fields:e[i].fields});for(let e=0;e<this.vectorLayers.length;e++){const t=this.vectorLayers[e],i=t.renderer.toJSON();let s;switch(t.geometryType){case"polygon":if("simple"===i.type)s={type:"polygon",color:t.renderer.symbol.color?[t.renderer.symbol.color.r,t.renderer.symbol.color.g,t.renderer.symbol.color.b,t.renderer.symbol.color.a]:[0,0,0,0],outline:{width:t.renderer.symbol.outline?t.renderer.symbol.outline.width:2,color:t.renderer.symbol.outline&&t.renderer.symbol.outline.color?[t.renderer.symbol.outline.color.r,t.renderer.symbol.outline.color.g,t.renderer.symbol.outline.color.b,t.renderer.symbol.outline.color.a]:[0,92,230,255]}},i.symbol=s;else if("uniqueValue"===i.type)for(const e in t.renderer.uniqueValueInfos)s={type:"polygon",color:t.renderer.uniqueValueInfos[e].symbol.color?[t.renderer.uniqueValueInfos[e].symbol.color.r,t.renderer.uniqueValueInfos[e].symbol.color.g,t.renderer.uniqueValueInfos[e].symbol.color.b,t.renderer.uniqueValueInfos[e].symbol.color.a]:[0,0,0,0],outline:{width:t.renderer.uniqueValueInfos[e].symbol.outline?t.renderer.uniqueValueInfos[e].symbol.outline.width:2,color:t.renderer.uniqueValueInfos[e].symbol.outline&&t.renderer.uniqueValueInfos[e].symbol.outline.color?[t.renderer.uniqueValueInfos[e].symbol.outline.color.r,t.renderer.uniqueValueInfos[e].symbol.outline.color.g,t.renderer.uniqueValueInfos[e].symbol.outline.color.b,t.renderer.uniqueValueInfos[e].symbol.outline.color.a]:[0,92,230,255]}},i.uniqueValueInfos[e].symbol=s;break;case"polyline":if("simple"===i.type)s={type:"polyline",color:t.renderer.symbol.color?[t.renderer.symbol.color.r,t.renderer.symbol.color.g,t.renderer.symbol.color.b,t.renderer.symbol.color.a]:[76,230,0,255],width:t.renderer.symbol.width||2},i.symbol=s;else if("uniqueValue"===i.type)for(const e in t.renderer.uniqueValueInfos)s={type:"polyline",color:t.renderer.uniqueValueInfos[e].symbol.color?[t.renderer.uniqueValueInfos[e].symbol.color.r,t.renderer.uniqueValueInfos[e].symbol.color.g,t.renderer.uniqueValueInfos[e].symbol.color.b,t.renderer.uniqueValueInfos[e].symbol.color.a]:[76,230,0,255],width:t.renderer.uniqueValueInfos[e].symbol.width||2},i.uniqueValueInfos[e].symbol=s;break;case"point":if("simple"===i.type)s={type:"point",style:t.renderer.symbol.style||"circle",color:t.renderer.symbol.color?[t.renderer.symbol.color.r,t.renderer.symbol.color.g,t.renderer.symbol.color.b,t.renderer.symbol.color.a]:[255,127,127,255],size:t.renderer.symbol.size||10,outline:{width:t.renderer.symbol.outline?t.renderer.symbol.outline.width:0,color:t.renderer.symbol.outline&&t.renderer.symbol.outline.color?[t.renderer.symbol.outline.color.r,t.renderer.symbol.outline.color.g,t.renderer.symbol.outline.color.b,t.renderer.symbol.outline.color.a]:[0,0,0,1]}},i.symbol=s;else if("uniqueValue"===i.type)for(const e in t.renderer.uniqueValueInfos)s={type:"point",style:t.renderer.uniqueValueInfos[e].symbol.style||"circle",color:t.renderer.uniqueValueInfos[e].symbol.color?[t.renderer.uniqueValueInfos[e].symbol.color.r,t.renderer.uniqueValueInfos[e].symbol.color.g,t.renderer.uniqueValueInfos[e].symbol.color.b,t.renderer.uniqueValueInfos[e].symbol.color.a]:[255,127,127,255],size:t.renderer.uniqueValueInfos[e].symbol.size||10,outline:{width:t.renderer.uniqueValueInfos[e].symbol.outline?t.renderer.uniqueValueInfos[e].symbol.outline.width:0,color:t.renderer.uniqueValueInfos[e].symbol.outline&&t.renderer.uniqueValueInfos[e].symbol.outline.color?[t.renderer.uniqueValueInfos[e].symbol.outline.color.r,t.renderer.uniqueValueInfos[e].symbol.outline.color.g,t.renderer.uniqueValueInfos[e].symbol.outline.color.b,t.renderer.uniqueValueInfos[e].symbol.outline.color.a]:[0,0,0,1]}},i.uniqueValueInfos[e].symbol=s}this.orientedViewer.addVectorLayer(t.title,t.url,i,t.editable)}},this.removeVectorLayers=()=>{var e;if((null===(e=this.vectorLayers)||void 0===e?void 0:e.length)>0)for(let e=0;e<this.vectorLayers.length;e++)this.orientedViewer.removeVectorLayer(this.vectorLayers[e].title)},this.addFeature=e=>{let t,i;for(const s of this.vectorLayers)if(s.title===e.layer){t="unique-value"===s.renderer.type&&s.renderer.field?s.renderer.field:null,i=this.mapView.map.findLayerById(s.id);break}const s=e.attributes?e.attributes:{};if(s.ImgGeom=JSON.stringify(s.ImgGeom),!i.hasZ)if("point"===i.geometryType)e.geometry.z=null;else if("polyline"===i.geometryType)for(let t=0;t<=e.geometry.paths.length-1;t++)for(let i=0;i<=e.geometry.paths[t].length-1;i++)e.geometry.paths[t][i]=e.geometry.paths[t][i].splice(0,2);else if("polygon"===i.geometryType)for(let t=0;t<=e.geometry.rings.length-1;t++)for(let i=0;i<=e.geometry.rings[t].length-1;i++)e.geometry.rings[t][i]=e.geometry.rings[t][i].splice(0,2);const r=new n.default({geometry:"point"===i.geometryType?new o.default(e.geometry):"polyline"===i.geometryType?new d.default(e.geometry):new l.default(e.geometry),attributes:s}),a={addFeatures:[r]};i.applyEdits(a).then((s=>{s.addFeatureResults.length?(this.showAttributeWindow(i,r,s.addFeatureResults[0].objectId,t),this.orientedViewer.applyEdits({layer:e.layer,success:!0,objectId:s.addFeatureResults[0].objectId,mode:"add"})):this.orientedViewer.applyEdits({layer:e.layer,success:!1,error:"Failed",mode:"add"})})).catch((t=>{this.orientedViewer.applyEdits({layer:e.layer,success:!1,error:t.message,mode:"add"})}))},this.deleteFeature=e=>{let t;for(const i of this.vectorLayers)if(i.title===e.layer){t=this.mapView.map.findLayerById(i.id);break}t.applyEdits({deleteFeatures:[{objectId:e.featureId}]}).then((t=>{t.deleteFeatureResults.length?this.orientedViewer.applyEdits({layer:e.layer,success:!0,mode:"delete"}):this.orientedViewer.applyEdits({layer:e.layer,success:!1,error:"Failed",mode:"delete"})})).catch((t=>{this.orientedViewer.applyEdits({layer:e.layer,success:!1,error:t.message,mode:"delete"})}))},this.selectFeature=e=>{this.mapView.popup.visible&&this.mapView.popup.close();const t=Object.keys(e),i=[];let s,r=t.length;t.forEach((t=>{for(const e of this.vectorLayers)if(e.title===t){s=this.mapView.map.findLayerById(e.id);break}s.popupEnabled&&s.visible?s.queryFeatures({objectIds:e[t],outFields:["*"],returnGeometry:!0,returnZ:!0,outSpatialReference:this.mapView.extent.spatialReference}).then((t=>{if(t.features.length){for(const e in t.features)t.features[e].geometry.spatialReference=this.mapView.extent.spatialReference,i.push(new n.default({attributes:t.features[e].attributes,layer:s,geometry:"point"===s.geometryType?new o.default(t.features[e].geometry):"polyline"===s.geometryType?new d.default(t.features[e].geometry):new l.default(t.features[e].geometry),popupTemplate:s.popupTemplate}));r--,0===r&&(this.mapView.popup.location="polygon"===i[0].geometry.type?i[0].geometry.centroid:"polyline"===i[0].geometry.type?i[0].geometry.extent.center:i[0].geometry,this.mapView.popup.open({features:i}),this.featureSelected=e)}})).bind(this).catch((()=>{r--,0===r&&i.length&&(this.mapView.popup.location="polygon"===i[0].geometry.type?i[0].geometry.centroid:"polyline"===i[0].geometry.type?i[0].geometry.extent.center:i[0].geometry,this.mapView.popup.open({features:i}),this.featureSelected=e)})).bind(this):(r--,0===r&&i.length&&(this.mapView.popup.location="polygon"===i[0].geometry.type?i[0].geometry.centroid:"polyline"===i[0].geometry.type?i[0].geometry.extent.center:i[0].geometry,this.mapView.popup.open({features:i}),this.featureSelected=e))}))},this.showAttributeWindow=(e,t,i,s)=>{const r=document.createElement("div");r.setAttribute("id","formDiv");const o=[];for(let t=0;t<e.fields.length;t++)if(!0===e.fields[t].editable&&"ImgUrn"!==e.fields[t].name&&"ImgGeom"!==e.fields[t].name&&e.fields[t].name!==s){const i=new S.default({fieldName:e.fields[t].name,label:e.fields[t].name,editable:!0});o.push(i)}const a=new M.default({elements:o}),n=new V.default({container:r,layer:e,feature:t,formTemplate:a});setTimeout((()=>{const s=document.createElement("button");s.setAttribute("class","oi-btn-css oi-btn-css-clear"),s.innerHTML=this.nls("updateButton"),s.addEventListener("click",(()=>{n&&n.submit()})),n.container.appendChild(s);const a=document.createElement("button");a.setAttribute("class","oi-btn-css oi-btn-css-clear"),a.style.marginLeft="10px",a.innerHTML=this.nls("deleteButton"),a.addEventListener("click",(()=>{e.applyEdits({deleteFeatures:[{objectId:i}]}).then((t=>{t.deleteFeatureResults.length&&(this.orientedViewer.refreshVectorLayer(e.title),this.mapView.popup.clear(),this.mapView.popup.close())}))})),n.container.appendChild(a),n.on("submit",(()=>{const s=n.getValues();Object.keys(s).forEach((e=>{t.attributes[e]=s[e]})),t.attributes[e.objectIdField]=i;const r={updateFeatures:[t]};e.applyEdits(r).then((e=>{e.updateFeatureResults.length&&(this.mapView.popup.clear(),this.mapView.popup.close())}))})),o.length>0&&this.mapView.popup.open({location:t.geometry,content:r})}),500)},this.graphicSelected=e=>{if(this.hidePopup)this.hidePopup&&(this.hidePopup=!1,this.mapView.popup.clear(),this.mapView.popup.close());else if(this.selectedGraphicProperties=null,document.getElementById("viewGraphicBtn")&&(document.getElementById("viewGraphicBtn").style.display="none"),e&&e.layer&&-1===this.state.config.oic[this.oicList[0]].serviceUrl.indexOf("https://graph.mapillary.com/images")){this.featureSelected&&this.orientedViewer.deselectFeaturesInImage(this.featureSelected);const t={};t[e.layer.title]=[e.attributes[e.layer.objectIdField]],this.featureSelected=t,this.orientedViewer.selectFeaturesInImage(this.featureSelected);let i=!1;for(const t in e.layer.fields)if("ImgUrn"===e.layer.fields[t].name){i=!0;break}if(i)for(const i of this.vectorLayers)if(-1!==i.indexOf(e.layer.url)){if(e.attributes.ImgUrn)this.findImageInCatalog(e.attributes.ImgUrn,e,this.state.config.oic[this.state.selectedOIC].serviceUrl,t);else{const i=e.attributes[e.layer.objectIdField],s=new w.default;s.where=e.layer.objectIdField+"="+i,s.outFields=["ImgUrn"],s.returnGeometry=!e.geometry,e.layer.queryFeatures(s).then((i=>{i.features.length&&(i.features[0].geometry&&(e.geometry=i.features[0].geometry),this.findImageInCatalog(i.features[0].attributes.ImgUrn,e,this.state.config.oic[this.state.selectedOIC].serviceUrl,t))}))}break}}},this.findImageInCatalog=(e,t,i,s)=>{const r=t.geometry;e&&g.default.fromArcGISServerUrl({url:i,properties:{visible:!1}}).then((t=>{t.load().then((o=>{let a;const n=t.fields;let l;for(const e of n){if("global-id"===e.type){a=e.name;break}"ExposureID"===e.name&&(l="ExposureID")}if(a||l){const i=new w.default;i.where=(a||l)+' = "'+e+'"',t.queryObjectIds(i).then((t=>{t.length&&(this.selectedGraphicProperties={imgUrn:e,geometry:r,id:t[0],highlight:s},document.getElementById("viewGraphicBtn")&&(document.getElementById("viewGraphicBtn").style.display="inline-block"))}))}else{let t;t=-1!==i.indexOf("/ImageServer")?i.split("/ImageServer")[0].split("services/")[1]:i.split("/FeatureServer")[0].split("services/")[1];const o=e.split("|");let a,n;3===o.length?(a=-1!==t.indexOf(o[1]),n=o[2]):2===o.length?(a=-1!==t.indexOf(o[0]),n=o[1]):(a=!1,n=o[0]),a&&(this.selectedGraphicProperties={imgUrn:e,geometry:r,id:n,highlight:s},document.getElementById("viewGraphicBtn")&&(document.getElementById("viewGraphicBtn").style.display="inline-block"))}}))}))},this.openImageInViewer=()=>{var e,t;if(this.selectedGraphicProperties&&this.props.oiApiLoaded){const i=this.state.config.oic[this.state.selectedOIC].itemUrl;let s;s="point"===this.selectedGraphicProperties.geometry.type?this.selectedGraphicProperties.geometry:"polygon"===this.selectedGraphicProperties.geometry.type?this.selectedGraphicProperties.geometry.centroid:this.selectedGraphicProperties.geometry.extent.center,s.z=0,this.selectedPoint=s.toJSON(),document.getElementById("viewGraphicBtn")&&(document.getElementById("viewGraphicBtn").style.display="none"),"2d"===this.mapView.type?this.orientedViewer.searchImages(s.toJSON(),i,{token:{token:this.preserveToken&&this.preserveToken.token?this.preserveToken.token:null,server:this.preserveToken&&this.preserveToken.server?this.preserveToken.server+"/sharing/rest":null},maxDistance:null!==(e=Number(this.state.config.oic[this.state.selectedOIC].itemUrl.properties.MaxDistance))&&void 0!==e?e:1e3,objectId:parseInt(this.selectedGraphicProperties.id),extent:this.mapView.extent.toJSON()}):this.orientedViewer.searchImages(s.toJSON(),i,{token:{token:this.preserveToken&&this.preserveToken.token?this.preserveToken.token:null,server:this.preserveToken&&this.preserveToken.server?this.preserveToken.server+"/sharing/rest":null},maxDistance:null!==(t=Number(this.state.config.oic[this.state.selectedOIC].itemUrl.properties.MaxDistance))&&void 0!==t?t:1e3,mapSize:{w:this.mapView.width,h:this.mapView.height},objectId:parseInt(this.selectedGraphicProperties.id),extent:this.mapView.extent.toJSON()}),this.orientedViewer.toggleEditTool({layer:this.selectedGraphicProperties.graphicLayer,tool:"display",state:!0}),this.orientedViewer.selectFeaturesInImage(this.selectedGraphicProperties.highlight)}},this.setCameraView=e=>x.default.create(function(t,i){if(e){const i=new o.default({x:e.location.x,y:e.location.y,spatialReference:new c.default(e.location.spatialReference)});this.queryElevation(i).then((i=>{this.imageProperties.alt=i.geometry.z,i.geometry.z+=e.location.z;let s=Math.sqrt(Math.pow(this.selectedAsset.z-this.mapView.camera.position.z,2)+Math.pow(Math.sqrt(Math.pow(this.selectedAsset.x-this.mapView.camera.position.x,2)+Math.pow(this.selectedAsset.y-this.mapView.camera.position.y,2))/this.WMSF,2))*this.WMSF;const r=Math.sqrt(Math.pow(this.selectedAsset.z-i.geometry.z,2)+Math.pow(Math.sqrt(Math.pow(this.selectedAsset.x-i.geometry.x,2)+Math.pow(this.selectedAsset.y-i.geometry.y,2))/this.WMSF,2))*this.WMSF;let o,a;if(e.fov>this.mapView.camera.fov&&(s/=Math.pow(2,Math.abs(Math.round(Math.log(e.fov/this.mapView.camera.fov)/Math.log(2))))),r-s>0){o=i.geometry,a=e.fov;const t=s/r;for(let e=0;e<15;e++){const i=1/Math.pow(2,e),s=1/Math.pow(2,e+1);if(t<=i&&t>s){Math.abs(t-i)<Math.abs(t-s)?a*=i:a*=s;break}}}else o=i.geometry,a=e.fov;const n=new L.default({fov:a,heading:e.yaw,tilt:e.pitch,position:o});this.currentImageCameraLocation=i.geometry.clone();const l=this.mapView.camera.clone();l.fov=n.fov,this.mapView.camera=l,this.mapView.goTo(n,{easing:"linear"}).then((()=>{t()}))}))}}.bind(this)),this.deleteImageInView=()=>{this.imageInViewFlag=!1,this.graphicsLayer.graphics.removeAll(),this.changeLayersVisibility(!0),this.setViewConstraints({rotate:!0})},this.toggleImageInView=e=>{this.displayImageInViewFlag=e;for(let t=this.graphicsLayer.graphics.length-1;t>=0;t--)if(this.graphicsLayer.graphics.getItemAt(t).attributes&&"oi-imageMesh"===this.graphicsLayer.graphics.getItemAt(t).attributes.id){this.graphicsLayer.graphics.getItemAt(t).visible=e;break}},this.zoomImageInView=(e,t,i)=>{const s=this.mapView.camera.clone();this.orientedViewer.zoomImageInView({width:this.mapView.width,height:this.mapView.height,x:t,y:i,fov:s.fov,heading:s.heading,tilt:s.tilt,elevation:this.imageProperties.alt,position:s.position,delta:e})},this.panImageInView=e=>{const t=this.mapView.camera.clone();this.orientedViewer.panImageInView({width:this.mapView.width,height:this.mapView.height,elevation:this.imageProperties.alt,heading:t.heading,tilt:t.tilt,action:e.action,x:e.x,y:e.y,fov:t.fov,position:t.position})},this.updateViewCamera=e=>{const t=this.mapView.camera.clone();t.heading=e.heading,t.tilt=e.tilt,t.fov=e.fov,"relative-to-ground"===e.elevation&&(e.location.z+=this.imageProperties.alt),t.position=e.location,this.mapView.camera=t},this.updateImageInView=e=>{const t=e.image.mesh.clone();if("relative-to-ground"===e.image.elevation){const i=this.createMultiPoint({type:"frustum",geometries:[e.image.mesh]});this.queryElevation(new p.default({points:i,spatialReference:this.mapView.spatialReference})).then((e=>{let i=0;for(let s=2;s<t.vertexAttributes.position.length;s+=3)t.vertexAttributes.position[s]+=e.geometry.points[i][2],i++;for(let e=this.graphicsLayer.graphics.length-1;e>=0;e--)if(this.graphicsLayer.graphics.getItemAt(e).attributes&&"oi-imageMesh"===this.graphicsLayer.graphics.getItemAt(e).attributes.id){this.graphicsLayer.remove(this.graphicsLayer.graphics.getItemAt(e));break}const s=new n.default({geometry:t,symbol:{type:"mesh-3d",symbolLayers:[{type:"fill"}]},attributes:{id:"oi-imageMesh"}});this.graphicsLayer.add(s)}))}else{for(let e=this.graphicsLayer.graphics.length-1;e>=0;e--)if(this.graphicsLayer.graphics.getItemAt(e).attributes&&"oi-imageMesh"===this.graphicsLayer.graphics.getItemAt(e).attributes.id){this.graphicsLayer.remove(this.graphicsLayer.graphics.getItemAt(e));break}const e=new n.default({geometry:t,symbol:{type:"mesh-3d",symbolLayers:[{type:"fill"}]},attributes:{id:"oi-imageMesh"}});this.graphicsLayer.add(e)}},this.createMultiPoint=e=>{const t=[];if("point"===e.type){for(const i in e.geometries)t.push([e.geometries[i].x,e.geometries[i].y]);return t}if("frustum"===e.type){for(const i in e.geometries)for(let s=0;s<e.geometries[i].vertexAttributes.position.length;s+=3)t.push([e.geometries[i].vertexAttributes.position[s],e.geometries[i].vertexAttributes.position[s+1]]);return t}if("polygon"===e.type){for(const i in e.geometries)for(let s=0;s<e.geometries[i].rings.length;s++)for(let r=0;r<e.geometries[i].rings[s].length;r++)t.push([e.geometries[i].rings[s][r][0],e.geometries[i].rings[s][r][1]]);return t}},this.addImageInView=e=>{for(let e=this.graphicsLayer.graphics.length-1;e>=0;e--)if(this.graphicsLayer.graphics.getItemAt(e).attributes&&"oi-imageMesh"===this.graphicsLayer.graphics.getItemAt(e).attributes.id){this.graphicsLayer.remove(this.graphicsLayer.graphics.getItemAt(e));break}if(e.image){this.imageProperties=e.properties,this.setViewConstraints({rotate:!1});let t=this.createMultiPoint({type:"point",geometries:e.imageSourcePoints});const i=this.createMultiPoint({type:"frustum",geometries:e.coverageFrustums});if(t=t.concat(i),"relative-to-ground"===e.image.elevation){const i=this.createMultiPoint({type:"frustum",geometries:[e.image.mesh]});t=t.concat(i)}const s=e.image.mesh.clone();for(let i=0;i<t.length;i++)if(i<e.imageSourcePoints.length)e.imageSourcePoints[i].z+=this.avgGroundElevation||0;else{for(let t=0;t<e.coverageFrustums.length;t++)for(let s=2;s<e.coverageFrustums[t].vertexAttributes.position.length;s+=3)e.coverageFrustums[t].vertexAttributes.position[s]+=this.avgGroundElevation||0,i++;if("relative-to-ground"===e.image.elevation)for(let e=2;e<s.vertexAttributes.position.length;e+=3)s.vertexAttributes.position[e]+=this.avgGroundElevation||0,i++}this.imageInViewFlag=!0;const r=new n.default({geometry:s,symbol:{type:"mesh-3d",symbolLayers:[{type:"fill"}]},attributes:{id:"oi-imageMesh"}});if(r.visible=this.displayImageInViewFlag,this.drawImageSourcePoints(e.imageSourcePoints,e.imageAttributes.imageID),this.activeImageID=e.imageAttributes.imageID,"relative-to-ground"===e.image.elevation){const t=new o.default({x:e.properties.location.x,y:e.properties.location.y,spatialReference:new c.default(e.properties.location.spatialReference)});this.queryElevation(t).then((t=>{this.imageProperties.alt=t.geometry.z,t.geometry.z+=e.properties.location.z;const i=new L.default({fov:e.properties.fov,heading:e.properties.yaw,tilt:e.properties.pitch,position:t.geometry}),s=this.mapView.camera.clone();s.fov=i.fov,this.mapView.camera=s,this.mapView.goTo(i,{easing:"linear"}).then((()=>{this.changeLayersVisibility(!1),this.graphicsLayer.add(r)}))}))}else{const t=new L.default({fov:e.properties.fov,heading:e.properties.yaw,tilt:e.properties.pitch,position:e.properties.location}),i=this.mapView.camera.clone();i.fov=t.fov,this.mapView.camera=i,this.mapView.goTo(t,{easing:"linear"}).then((()=>{this.changeLayersVisibility(!1),this.graphicsLayer.add(r)}))}}},this.queryElevation=e=>x.default.create(((t,i)=>{if(this.mapView.map.ground.layers.length)this.mapView.map.ground.queryElevation(e).then((e=>{t(e)}));else{const i=e.clone();if("point"===i.type)i.z=0;else for(let e=0;e<i.points.length;e++)i.points[e][2]=0;t({geometry:i})}})),this.setViewConstraints=e=>{e.rotate?this.enableZoom():this.disableZoom()},this.changeLayersVisibility=e=>{},this.disableZoom=()=>{const e=document.getElementsByClassName("esri-component esri-zoom esri-widget");e.length&&(e[0].style.display="none");const t=function(e){e.stopPropagation()};this.zoomHandlers=[],this.zoomHandlers.push(this.mapView.on("mouse-wheel",(e=>{e.stopPropagation(),e.deltaY<0?this.zoomImageInView(-1,e.x,e.y):this.zoomImageInView(1,e.x,e.y)}))),this.zoomHandlers.push(this.mapView.on("double-click",t)),this.zoomHandlers.push(this.mapView.on("double-click",["Control"],t)),this.zoomHandlers.push(this.mapView.on("drag",(e=>{e.stopPropagation(),this.panImageInView(e)}))),this.zoomHandlers.push(this.mapView.on("drag",["Shift"],t)),this.zoomHandlers.push(this.mapView.on("drag",["Shift","Control"],t)),this.zoomHandlers.push(this.mapView.on("key-down",(e=>{const t=e.key;["+","-","Shift","_","="].includes(t)&&(e.stopPropagation(),"+"===t?this.zoomImageInView(-1,this.mapView.width/2,this.mapView.height/2):"-"===t&&this.zoomImageInView(1,this.mapView.width/2,this.mapView.height/2)),"Arrow"===t.slice(0,5)&&(e.stopPropagation(),this.panImageInView({action:"start",x:this.mapView.width/2,y:this.mapView.height/2}),"ArrowLeft"===t?this.panImageInView({action:"end",x:this.mapView.width/2+10,y:this.mapView.height/2}):"ArrowRight"===t?this.panImageInView({action:"end",x:this.mapView.width/2-10,y:this.mapView.height/2}):"ArrowUp"===t?this.panImageInView({action:"end",x:this.mapView.width/2,y:this.mapView.height/2+10}):"ArrowDown"===t&&this.panImageInView({action:"end",x:this.mapView.width/2,y:this.mapView.height/2-10}))})))},this.enableZoom=()=>{const e=document.getElementsByClassName("esri-component esri-zoom esri-widget");e.length&&(e[0].style.display="block");for(const e of this.zoomHandlers)e.remove();this.zoomHandlers=[]},this.setViewMode=e=>{this.graphicsLayer.graphics.removeAll(),e||this.imageInViewFlag&&this.deleteImageInView()},this.setupResizeHandle=(e,t)=>{var i;t&&e&&(this.oiviewerRef.current.style.height="100%",this.oiviewerRef.current.style.width="100%",null===(i=this.orientedViewer)||void 0===i||i.resize())},this.state={selectedOIC:"",config:{},OICname:"",showLoading:!0,mapLoaded:!1},this.oiviewerRef=e.React.createRef(),this.selectBtnRef=e.React.createRef()}componentDidMount(){var e,t;return D(this,void 0,void 0,(function*(){null===(t=null===(e=this.selectBtnRef)||void 0===e?void 0:e.current)||void 0===t||t.classList.add("hide"),this.setState({config:{oic:[]}}),this.oicList=[],this.props.token&&(this.preserveToken.token||(this.preserveToken.token=this.props.token),this.preserveToken.server||(this.preserveToken.server=this.props.portalUrl)),A.default.on("credential-create",(e=>{this.preserveToken.token||(this.preserveToken.token=e.credential.token),this.preserveToken.server||(this.preserveToken.server=e.credential.server)})),this.mapView.map.layers.on("after-add",(()=>{this.mapView.map.reorder(this.graphicsLayer,this.mapView.map.layers.length-1)}))}))}componentDidUpdate(e){var t,i;"CLOSED"!==this.props.state&&(this.mapView&&!this.apiLocalState&&(this.loadOrientedImageryApi(),this.loadOIC()),(null===(t=this.props.config.oicList)||void 0===t?void 0:t.length)&&!this.overviewLayer&&this.mapView?this.loadOIC():(null===(i=this.props.config.oicList)||void 0===i?void 0:i.length)&&this.overviewLayer&&this.mapView&&this.props.pointBool===e.pointBool&&(this.overviewLayer.fullExtent.spatialReference.wkid!==this.mapView.spatialReference.wkid||b.default.intersects(this.mapView.extent,this.overviewLayer.fullExtent)&&!b.default.within(this.overviewLayer.fullExtent,this.mapView.extent)||this.mapView.goTo(this.overviewLayer.fullExtent)),document.querySelectorAll('link[id="orientedImagery-web-dark"').length>0&&(this.props.theme.darkTheme?window.orientedImagery.setTheme("dark"):window.orientedImagery.setTheme("light"))),this.props.oiApiLoaded&&(this.state.defaultImage||this.state.defaultPoint)&&(this.state.defaultPoint?this.searchImages(this.selectedPoint,this.state.defaultImage):this.showImage(this.mapView.extent.center.clone(),this.state.defaultImage))}componentWillUnmount(){var e,t,i,s,r;null===(e=this.mapClickEventHandler)||void 0===e||e.remove(),null===(t=this.mapPopupHandler1)||void 0===t||t.remove(),null===(i=this.mapPopupHandler2)||void 0===i||i.remove(),null===(s=this.mapView)||void 0===s||s.map.remove(this.graphicsLayer),null===(r=this.mapView)||void 0===r||r.map.remove(this.overviewLayer)}static mapExtraStateProps(e){return{pointBool:e.widget_orientedimagery.pointBool,oiApiLoaded:e.widget_orientedimagery.oiApiLoaded}}render(){var r;let o=null;const a=(0,e.classNames)("oi-btn-css","oi-btn-css-clear","oi-btn-css-grouped","oi-widget-selectBtn",this.props.pointBool?"oi-widget-selectBtnSelected":"");return this.isConfigured()?o=(0,e.jsx)("div",{className:"widget-orientedimagery"},(0,e.jsx)(i.Button,{ref:this.selectBtnRef,"aria-label":this.props.pointBool?this.nls("toggleButtonOn"):this.nls("toggleButtonOff"),title:this.props.pointBool?this.nls("toggleButtonOn"):this.nls("toggleButtonOff"),className:a,onClick:this.toggleIcon.bind(this)},(0,e.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"32",height:"32",viewBox:"0 0 32 32",className:"svg-icon"},(0,e.jsx)("path",{d:"M15.999 0C11.214 0 8 1.805 8 6.5v17l7.999 8.5L24 23.5v-17C24 1.805 20.786 0 15.999 0zM16 14.402A4.4 4.4 0 0 1 11.601 10a4.4 4.4 0 1 1 8.798 0A4.4 4.4 0 0 1 16 14.402z"}))),(0,e.jsx)(t.JimuMapViewComponent,{useMapWidgetId:null===(r=this.props.useMapWidgetIds)||void 0===r?void 0:r[0],onActiveViewChange:this.onActiveViewChange}),(0,e.jsx)("div",{ref:this.oiviewerRef},(0,e.jsx)("button",{className:"oi-btn-css oi-btn-css-transparent",style:{display:"none",marginTop:"5px"},id:"viewGraphicBtn"},this.nls("viewImage")),(0,e.jsx)(e.ReactResizeDetector,{handleWidth:!0,handleHeight:!0,onResize:this.setupResizeHandle})),this.state.showLoading&&(0,e.jsx)(i.Loading,{type:i.LoadingType.Donut})):(this.destroyOIViewer(),o=(0,e.jsx)("div",{className:"widget-orientedimagery"},(0,e.jsx)(i.WidgetPlaceholder,{icon:E(),message:this.props.intl.formatMessage({id:"_widgetLabel",defaultMessage:s._widgetLabel}),widgetId:this.props.id}))),(0,e.jsx)("div",{css:(n=this.props.theme,e.css`
    
    overflow: auto;
    .widget-orientedimagery {
      width: 100%;
      height: 100%;
  
    
    .oi-widget-selectBtn {
      width: 40px;
      height: 40px;
      padding: 0px;
      color: ${n.colors.palette.dark[500]};  // ${n.colors.white};
      background: ${n.colors.transparent}; // ${n.colors.palette.primary[600]};
      border-color: ${n.colors.transparent}; // ${n.colors.palette.primary[600]};
      position: absolute;
      left: 0px!important;
      z-index: 3;
      /* display: none; */
    }

    .oi-widget-selectBtnSelected {
      color: ${n.colors.palette.dark[500]}; // ${n.colors.white};
      background: ${n.colors.palette.light[400]}; // ${n.colors.palette.primary[500]};
      border-color: ${n.colors.palette.light[400]}; // ${n.colors.palette.primary[500]};
    }

    .oi-widget-selectBtn.oi-btn-css-clear:hover:not(.oi-widget-selectBtnSelected) {
      color: ${n.colors.palette.dark[300]}; // ${n.colors.white};
      background: ${n.colors.palette.light[300]}; // ${n.colors.palette.primary[500]};
      border-color: ${n.colors.palette.light[300]};
    }

    .svg-icon {
      fill: currentColor;
      pointer-events: none;
      display: inline-block;
      width: 1.2em;
      height: 1.2em;
      vertical-align: middle;
      padding-right: .15em;
    }

    .oi-label {
        margin: 10px;
        font-size: 13px;
        color: ${n.colors.white};
    }

    .hide {
      display: none;
    }

    .show {
      display: block;
    }

    /* .oic-click-btn {
        background: ${n.colors.palette.primary[600]};
        border-radius: 3px;
        padding: 5px;
    } */
    }
    `),className:"jimu-widget"},o);var n}}})(),F})())}}}));